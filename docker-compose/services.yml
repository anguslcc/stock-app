version: "3.8"
services:
  stock-quote-producer:
    image: ${GROUP_ID}/stock-quote-producer:${SERVICE_VERSION:-latest}
    ports:
      - "5005:5005"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=${KAFKA_SCHEMA_REGISTRY_URL}"
      - "CONFIG_SERVER_URL=${CONFIG_SERVER_URL}"
      - "LOGSTASH_SERVER_URL=${LOGSTASH_SERVER_URL}"
    depends_on:
      config-service:
        condition: service_healthy
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
      kafka-broker-3:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
      logstash01:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "stock-quote-producer:5005/actuator/health" ]
      start_period: 20s
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - ${GLOBAL_NETWORK:-services}

  stock-quote-consumer:
    image: ${GROUP_ID}/stock-quote-consumer:${SERVICE_VERSION:-latest}
    ports:
      - "5006:5006"
    depends_on:
      config-service:
        condition: service_healthy
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
      kafka-broker-3:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      stock-data-service:
        condition: service_healthy
      logstash01:
        condition: service_healthy
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Xms128m -Xmx256m"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=${KAFKA_SCHEMA_REGISTRY_URL}"
      - "CONFIG_SERVER_URL=${CONFIG_SERVER_URL}"
      - "SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "GATEWAY_SERVER_URL=${GATEWAY_SERVER_URL}"
      - "KEYCLOAK_SERVER_URL=${KEYCLOAK_SERVER_URL}"
      - "LOGSTASH_SERVER_URL=${LOGSTASH_SERVER_URL}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "stock-quote-consumer:5006/actuator/health" ]
      start_period: 20s
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - ${GLOBAL_NETWORK:-services}

  config-service:
    image: ${GROUP_ID}/config-service:${SERVICE_VERSION:-latest}
    hostname: localhost
    ports:
      - "8088:8088"
    depends_on:
      logstash01:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "${CONFIG_SERVER_URL}/stock-quote-producer/default" ]
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 4
    environment:
      - "LOGSTASH_SERVER_URL=${LOGSTASH_SERVER_URL}"
    networks:
      - ${GLOBAL_NETWORK:-services}

  discovery-service:
    image: ${GROUP_ID}/discovery-service:${SERVICE_VERSION:-latest}
    ports:
      - "8061:8061"
    depends_on:
      config-service:
        condition: service_healthy
      logstash01:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8061" ]
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 4
    environment:
      - "CONFIG_SERVER_URL=${CONFIG_SERVER_URL}"
      - "LOGSTASH_SERVER_URL=${LOGSTASH_SERVER_URL}"
    networks:
      - ${GLOBAL_NETWORK:-services}

  stock-data-service:
    image: ${GROUP_ID}/stock-data-service:${SERVICE_VERSION:-latest}
    ports:
      - "8100"
    depends_on:
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
      postgres:
        condition: service_healthy
      gateway-service:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      logstash01:
        condition: service_healthy
    environment:
      - "CONFIG_SERVER_URL=${CONFIG_SERVER_URL}"
      - "DISCOVERY_SERVER_URL=${DISCOVERY_SERVER_URL}"
      - "SERVICE_NAME=stock-data-service"
      - "DATABASE_SERVICE=postgres"
      - "KEYCLOAK_SERVER_URL=${KEYCLOAK_SERVER_URL}"
      - "LOGSTASH_SERVER_URL=${LOGSTASH_SERVER_URL}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "gateway-service:8080/stock-data/actuator/health" ]
      start_period: 60s
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - ${GLOBAL_NETWORK:-services}

  gateway-service:
    image: ${GROUP_ID}/gateway-service:${SERVICE_VERSION:-latest}
    ports:
      - "8080:8080"
    depends_on:
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
      logstash01:
        condition: service_healthy
    environment:
      - "CONFIG_SERVER_URL=${CONFIG_SERVER_URL}"
      - "DISCOVERY_SERVER_URL=${DISCOVERY_SERVER_URL}"
      - "KEYCLOAK_SERVER_URL=${KEYCLOAK_SERVER_URL}"
      - "LOGSTASH_SERVER_URL=${LOGSTASH_SERVER_URL}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "gateway-service:8080/actuator/health" ]
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 4
    networks:
      - ${GLOBAL_NETWORK:-services}      
    